// Shader: Translated to CG from: https://www.shadertoy.com/view/lss3Df (Circle pattern by iq)

struct v2fConnector
{
	float4 projCoord : POSITION;
	float4 color     : COLOR0;
	float4 tex       : TEX0;
};

struct f2fConnector
{
	float4 COL0 : COLOR0;
};

// Defines
#define NUM 9.0

// Functions
float noise2( in float2 x )
{
	float2 p = floor(x);
	float2 f = frac(x);
	float2 uv = p.xy + f.xy*f.xy*(3.0-2.0*f.xy);
	return 0.0;
}

float map( in float2 x, float t )
{
	return noise2( 2.5*x - 1.5*t*float2(1.0,0.0) );
}

float shapes( in float2 uv, in float r, in float e )
{
	float p = pow( 32.0, r - 0.5 );
	float l = pow( pow(abs(uv.x),p) + pow(abs(uv.y),p), 1.0/p );
	float d = l - pow(r,0.6) - e*0.2 + 0.05;
	float fw = fwidth( d )*0.5;
	fw *= 1.0 + 10.0*e;
	return (r)*smoothstep( fw, -fw, d ) * (1.0-0.2*e)*(0.4 + 0.6*smoothstep( -fw, fw, abs(l-r*0.8+0.05)-0.1 ));
}

// Main
f2fConnector main
(
	v2fConnector v2f
)
{
	// GLSL variables
	#define WIDTH 720.0
	#define HEIGHT 480.0
	float3 iResolution = float3(WIDTH, HEIGHT, 1.0);
	float4 gl_FragCoord = float4(v2f.tex.x*WIDTH, v2f.tex.y*HEIGHT, 1.0, 0.0);
	float4 gl_FragColor;

	f2fConnector f2f;

	// Shader: Translated to CG from: https://www.shadertoy.com/view/lss3Df (Circle pattern by iq)
	float2 qq = gl_FragCoord.xy/iResolution.xy;
	float2 uv = gl_FragCoord.xy/iResolution.xx;
	float time = 11.0;
	
	uv += 0.01*noise2( 2.0*uv + 0.2*time );
	float3 col = 0.0*float3(1.0) * 0.15 * abs(qq.y-0.5);
	float2 pq, st; float f; float3 coo;
	
	// Grey	
	pq = floor( uv*NUM ) / NUM;
	st = frac( uv*NUM )*2.0 - 1.0;
	coo = (float3(0.5,0.7,0.7) + 0.3*sin(10.0*pq.x)*sin(13.0*pq.y))*0.6;
	col += 1.0*coo*shapes( st, map(pq, time), 0.0 );
	col += 0.6*coo*shapes( st, map(pq, time), 1.0 );

	// Orange
	pq = floor( uv*NUM+0.5 ) / NUM;
	st = frac( uv*NUM+0.5 )*2.0 - 1.0;
	coo = (float3(1.0,0.5,0.3) + 0.3*sin(10.0*pq.y)*cos(11.0*pq.x))*1.0;
	col += 1.0*coo*shapes( st, 1.0-map(pq, time), 0.0 );
	col += 0.4*coo*shapes( st, 1.0-map(pq, time), 1.0 );
	col *= pow( 16.0*qq.x*qq.y*(1.0-qq.x)*(1.0-qq.y), 0.05 );
	gl_FragColor = float4( col, 1.0 );

	// Return
	f2f.COL0 = gl_FragColor;
	return f2f;
}
